import React, {useState} from "react";
import { StyleSheet, 
        Platform,
        useWindowDimensions,
        TextInput, 
        View,
        TouchableOpacity  } from 'react-native';

import { Calendar,CalendarList,Agenda,LocaleConfig } from "react-native-calendars";

import DrinkComponent from "./components/DrinkComponent";
import {RequestData} from "./src/RequestData";
import { createAppContainer} from 'react-navigation';
import { createStackNavigator } from 'react-navigation-stack';

import DrinkPage from "./components/DrinkPage";

const {height, width} = useWindowDimensions();

LocaleConfig.locales['it'] = {
  monthNames: ['Gennaio','Febbraio','Marzo','Aprile','Maggio','Giugno','Luglio','Agosto','Settembre','Ottobre','Novembre','Dicembre'],
  monthNamesShort: ['Gen.','Feb.','Mar','Apr','Mag','Giu','Lug.','Ago','Set.','Ott.','Nov.','Dic.'],
  dayNames: ['Domenica','Lunedi','Martedi','Mercoledi','Giovedi','Venerdi','Sabato'],
  dayNamesShort: ['Dom.','Lun.','Mar.','Mer.','Gio.','Ven.','Sab.'],
  today: 'Oggi'
};
LocaleConfig.defaultLocale = 'it';

 class HomeScreen extends React.Component <{}, 
                {drinkSearched:string,loading:boolean, drinksFound: any}> {

  static navigationOptions = {
    title:"Cocktaildb.com",
    headerStyle:{
      position:"absolute",
      top:0,
      zIndex:5,
      backgroundColor: '#1b0710',
      borderBottomWidth:1.5,
      borderBottomColor:"#1b0710",
      shadowColor:"black",
      width:"100%",
      color:"#fff",
      shadowOffset: {
          width: 0,
          height: 5,
      },
      shadowOpacity: 0.34,
      shadowRadius: 6.27,
      shadowColor:"#E59400",
      elevation: 20,
      
      height:100, 
    },  
    headerTintColor: '#fff',
    headerTitleStyle: {
      fontWeight: 'bold',
    },
  }
  constructor(props:any){

    super(props);

    this.state = {
      drinkSearched : "",
      loading:false,
      drinksFound:[],
     
    };
  }
 
    handleRequest = async (drink:string) =>{

      this.setState({loading:true}, async() => {
        try{
          
            const response = await RequestData(drink);
            const responseJson = await response.json();
            if(responseJson.drinks != null)
                this.setState({drinksFound:responseJson.drinks});
            else this.setState({drinksFound:[]})
            this.setState({
              loading:false
            });
        }catch(error){
          console.log(error);
        }finally{
          this.setState({
            loading:false
          });
        }
      }
    )}

 render(){

  const {drinksFound,loading}= this.state;
  
  return (
    <View style={styles.container}>
  
      <View style={styles.srcBar}>
        <TextInput style ={styles.textInput} 
            placeholder="Find cocktail" 
           onSubmitEditing={(value) =>  this.handleRequest(value.nativeEvent.text)}/>
      </View>
    
      {
      drinksFound.map((drinkFound:any,index:number) => 
          <TouchableOpacity index={index} style={styles.products}  
              onPress={() => this.props.navigation.navigate('Details',{drinkID:  drinkFound.idDrink})} 
              key={index}>

                <DrinkComponent idDrink={drinkFound.idDrink} strDrink={drinkFound.strDrink} imgDrink={drinkFound.strDrinkThumb}/>
          
          </TouchableOpacity >
            )
      }
    </View>
  );
 }
}

class CocktailDetailScreen extends React.Component{

  static navigationOptions = {
    title:"Cocktaildb.com",
    headerStyle:{
      position:"absolute",
      top:0,
      zIndex:5,
      backgroundColor: '#1b0710',
      borderBottomWidth:1.5,
      borderBottomColor:"#1b0710",
      shadowColor:"black",
      width:"100%",
      color:"white",
      shadowOffset: {
          width: 0,
          height: 5,
      },
      shadowOpacity: 0.34,
      shadowRadius: 6.27,
      shadowColor:"#E59400",
      elevation: 20,
      
      height:100, 
    },  
    headerTintColor: '#fff',
    headerTitleStyle: {
      fontWeight: 'bold',
    },
  }

  render(){
    const {navigation} = this.props;
    return(
      <View style={styles.container}>
       
        <DrinkPage idDrink={JSON.stringify(navigation.getParam('drinkID', 'NO-ID')) }/>
      </View>
    )
  }
}


const RootStack = createStackNavigator(
  {
  "CockTaildb.com":HomeScreen,
  Details:CocktailDetailScreen,
  },
  {
  initialRouteName:"CockTaildb.com",
  }
)

const AppContainer = createAppContainer(RootStack);
export default class App extends React.Component{
  render(){
    return <AppContainer/>
  }
}

const styles = StyleSheet.create({
  container: {
    color:'#fff',
    fontFamily:'DejaVu Sans Mono, monospace',
    flex: 1,
    backgroundColor: '#2c0d1b',
    flexDirection:"row",
    justifyContent:"center",
    alignItems:"center",
    flexWrap:"wrap",
    width:"100%",
    height:"100%",
  },
  products:{
    flexDirection:"column",
    justifyContent:"center",
    alignItems:"center",
    flexBasis:"20%",
  },
  textInput:{
    width:320,
    height:320,
    flex:1,
    borderRadius:5,
    color:"black",
    backgroundColor: 'white',
},
  srcBar:{
    position:"absolute",
    top:0,
    zIndex:2,
    height: 40,
    marginTop: 20,
    backgroundColor: '#666',
    marginHorizontal: 40,
    borderRadius: 5
  },
});

